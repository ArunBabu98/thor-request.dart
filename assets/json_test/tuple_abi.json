{
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "pool",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "numX",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "numY",
              "type": "uint256"
            }
          ],
          "internalType": "struct TestTuples.Position",
          "name": "position",
          "type": "tuple"
        }
      ],
      "name": "tuplesTesting",
      "outputs": [
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/TestTuples.sol"
  },
  "ast": {
    "absolutePath": "contracts/TestTuples.sol",
    "exportedSymbols": {
      "TestTuples": [
        33
      ]
    },
    "id": 34,
    "license": "GPL-2.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".14"
        ],
        "nodeType": "PragmaDirective",
        "src": "45:24:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "TestTuples",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 33,
        "linearizedBaseContracts": [
          33
        ],
        "name": "TestTuples",
        "nameLocation": "80:10:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "TestTuples.Position",
            "id": 8,
            "members": [
              {
                "constant": false,
                "id": 3,
                "mutability": "mutable",
                "name": "pool",
                "nameLocation": "131:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 8,
                "src": "123:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 2,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "123:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 5,
                "mutability": "mutable",
                "name": "numX",
                "nameLocation": "153:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 8,
                "src": "145:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 4,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "145:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7,
                "mutability": "mutable",
                "name": "numY",
                "nameLocation": "175:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 8,
                "src": "167:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 6,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "167:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Position",
            "nameLocation": "104:8:0",
            "nodeType": "StructDefinition",
            "scope": 33,
            "src": "97:89:0",
            "visibility": "public"
          },
          {
            "body": {
              "id": 31,
              "nodeType": "Block",
              "src": "304:84:0",
              "statements": [
                {
                  "expression": {
                    "id": 24,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 18,
                      "name": "count",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "314:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 23,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 19,
                          "name": "position",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11,
                          "src": "322:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Position_$8_memory_ptr",
                            "typeString": "struct TestTuples.Position memory"
                          }
                        },
                        "id": 20,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "331:4:0",
                        "memberName": "numX",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5,
                        "src": "322:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "expression": {
                          "id": 21,
                          "name": "position",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11,
                          "src": "338:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Position_$8_memory_ptr",
                            "typeString": "struct TestTuples.Position memory"
                          }
                        },
                        "id": 22,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "347:4:0",
                        "memberName": "numY",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7,
                        "src": "338:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "322:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "314:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 25,
                  "nodeType": "ExpressionStatement",
                  "src": "314:37:0"
                },
                {
                  "expression": {
                    "id": 29,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 26,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "361:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 27,
                        "name": "position",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "368:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Position_$8_memory_ptr",
                          "typeString": "struct TestTuples.Position memory"
                        }
                      },
                      "id": 28,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "377:4:0",
                      "memberName": "pool",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3,
                      "src": "368:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "361:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 30,
                  "nodeType": "ExpressionStatement",
                  "src": "361:20:0"
                }
              ]
            },
            "functionSelector": "66b127b8",
            "id": 32,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tuplesTesting",
            "nameLocation": "200:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11,
                  "mutability": "mutable",
                  "name": "position",
                  "nameLocation": "239:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 32,
                  "src": "223:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Position_$8_memory_ptr",
                    "typeString": "struct TestTuples.Position"
                  },
                  "typeName": {
                    "id": 10,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9,
                      "name": "Position",
                      "nameLocations": [
                        "223:8:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8,
                      "src": "223:8:0"
                    },
                    "referencedDeclaration": 8,
                    "src": "223:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Position_$8_storage_ptr",
                      "typeString": "struct TestTuples.Position"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "213:40:0"
            },
            "returnParameters": {
              "id": 17,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14,
                  "mutability": "mutable",
                  "name": "pool",
                  "nameLocation": "283:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 32,
                  "src": "275:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "275:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16,
                  "mutability": "mutable",
                  "name": "count",
                  "nameLocation": "297:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 32,
                  "src": "289:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "289:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "274:29:0"
            },
            "scope": 33,
            "src": "191:197:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 34,
        "src": "71:319:0",
        "usedErrors": [],
        "usedEvents": []
      }
    ],
    "src": "45:346:0"
  },
  "bytecode": "608060405234801561001057600080fd5b5061015e806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806366b127b814610030575b600080fd5b61004361003e366004610085565b610066565b604080516001600160a01b03909316835260208301919091520160405180910390f35b6000808260400151836020015161007d9190610101565b925193915050565b60006060828403121561009757600080fd5b6040516060810181811067ffffffffffffffff821117156100c857634e487b7160e01b600052604160045260246000fd5b60405282356001600160a01b03811681146100e257600080fd5b8152602083810135908201526040928301359281019290925250919050565b8082018082111561012257634e487b7160e01b600052601160045260246000fd5b9291505056fea2646970667358221220dc267c91eb5c36cd743170895ea7ae1c1cbdf15839dd0c23d8878ed10dde73d164736f6c63430008140033",
  "bytecodeSha1": "40189e87de86cf262ed471b310cfe82f2f1fc026",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.20+commit.a1b79de6"
  },
  "contractName": "TestTuples",
  "coverageMap": {
    "branches": {
      "0": {}
    },
    "statements": {
      "0": {
        "TestTuples.tuplesTesting": {
          "0": [
            314,
            351
          ],
          "1": [
            361,
            381
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061002b5760003560e01c806366b127b814610030575b600080fd5b61004361003e366004610085565b610066565b604080516001600160a01b03909316835260208301919091520160405180910390f35b6000808260400151836020015161007d9190610101565b925193915050565b60006060828403121561009757600080fd5b6040516060810181811067ffffffffffffffff821117156100c857634e487b7160e01b600052604160045260246000fd5b60405282356001600160a01b03811681146100e257600080fd5b8152602083810135908201526040928301359281019290925250919050565b8082018082111561012257634e487b7160e01b600052601160045260246000fd5b9291505056fea2646970667358221220dc267c91eb5c36cd743170895ea7ae1c1cbdf15839dd0c23d8878ed10dde73d164736f6c63430008140033",
  "deployedSourceMap": "71:319:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;191:197;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;982:32:1;;;964:51;;1046:2;1031:18;;1024:34;;;;937:18;191:197:0;;;;;;;;275:12;289:13;338:8;:13;;;322:8;:13;;;:29;;;;:::i;:::-;368:13;;;191:197;-1:-1:-1;;191:197:0:o;14:771:1:-;96:6;149:2;137:9;128:7;124:23;120:32;117:52;;;165:1;162;155:12;117:52;198:2;192:9;240:2;232:6;228:15;309:6;297:10;294:22;273:18;261:10;258:34;255:62;252:185;;;359:10;354:3;350:20;347:1;340:31;394:4;391:1;384:15;422:4;419:1;412:15;252:185;453:2;446:22;490:23;;-1:-1:-1;;;;;542:31:1;;532:42;;522:70;;588:1;585;578:12;522:70;601:21;;683:2;668:18;;;655:32;638:15;;;631:57;749:2;734:18;;;721:32;704:15;;;697:57;;;;-1:-1:-1;608:6:1;14:771;-1:-1:-1;14:771:1:o;1069:222::-;1134:9;;;1155:10;;;1152:133;;;1207:10;1202:3;1198:20;1195:1;1188:31;1242:4;1239:1;1232:15;1270:4;1267:1;1260:15;1152:133;1069:222;;;;:::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    71,
    390
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x66B127B8 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x3E CALLDATASIZE PUSH1 0x4 PUSH2 0x85 JUMP JUMPDEST PUSH2 0x66 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x40 ADD MLOAD DUP4 PUSH1 0x20 ADD MLOAD PUSH2 0x7D SWAP2 SWAP1 PUSH2 0x101 JUMP JUMPDEST SWAP3 MLOAD SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xC8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MSTORE DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP4 DUP2 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x40 SWAP3 DUP4 ADD CALLDATALOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x122 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC 0x26 PUSH29 0x91EB5C36CD743170895EA7AE1C1CBDF15839DD0C23D8878ED10DDE73D1 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        71,
        390
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        71,
        390
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        71,
        390
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        71,
        390
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "6": {
      "fn": null,
      "offset": [
        71,
        390
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7": {
      "fn": null,
      "offset": [
        71,
        390
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        71,
        390
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        71,
        390
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12": {
      "fn": null,
      "offset": [
        71,
        390
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        71,
        390
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        71,
        390
      ],
      "op": "REVERT",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        71,
        390
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "17": {
      "fn": null,
      "offset": [
        71,
        390
      ],
      "op": "POP",
      "path": "0"
    },
    "18": {
      "fn": null,
      "offset": [
        71,
        390
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        71,
        390
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "21": {
      "fn": null,
      "offset": [
        71,
        390
      ],
      "op": "LT",
      "path": "0"
    },
    "22": {
      "fn": null,
      "offset": [
        71,
        390
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B"
    },
    "25": {
      "fn": null,
      "offset": [
        71,
        390
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        71,
        390
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        71,
        390
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "29": {
      "fn": null,
      "offset": [
        71,
        390
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        71,
        390
      ],
      "op": "SHR",
      "path": "0"
    },
    "32": {
      "fn": null,
      "offset": [
        71,
        390
      ],
      "op": "DUP1",
      "path": "0"
    },
    "33": {
      "fn": null,
      "offset": [
        71,
        390
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x66B127B8"
    },
    "38": {
      "fn": null,
      "offset": [
        71,
        390
      ],
      "op": "EQ",
      "path": "0"
    },
    "39": {
      "fn": null,
      "offset": [
        71,
        390
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x30"
    },
    "42": {
      "fn": null,
      "offset": [
        71,
        390
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "43": {
      "fn": null,
      "offset": [
        71,
        390
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "44": {
      "fn": null,
      "offset": [
        71,
        390
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "46": {
      "fn": null,
      "offset": [
        71,
        390
      ],
      "op": "DUP1",
      "path": "0"
    },
    "47": {
      "first_revert": true,
      "fn": null,
      "offset": [
        71,
        390
      ],
      "op": "REVERT",
      "path": "0"
    },
    "48": {
      "fn": "TestTuples.tuplesTesting",
      "offset": [
        191,
        388
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "49": {
      "fn": "TestTuples.tuplesTesting",
      "offset": [
        191,
        388
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x43"
    },
    "52": {
      "fn": "TestTuples.tuplesTesting",
      "offset": [
        191,
        388
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E"
    },
    "55": {
      "fn": "TestTuples.tuplesTesting",
      "offset": [
        191,
        388
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "56": {
      "fn": "TestTuples.tuplesTesting",
      "offset": [
        191,
        388
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "58": {
      "fn": "TestTuples.tuplesTesting",
      "offset": [
        191,
        388
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x85"
    },
    "61": {
      "fn": "TestTuples.tuplesTesting",
      "jump": "i",
      "offset": [
        191,
        388
      ],
      "op": "JUMP",
      "path": "0"
    },
    "62": {
      "fn": "TestTuples.tuplesTesting",
      "offset": [
        191,
        388
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "63": {
      "fn": "TestTuples.tuplesTesting",
      "offset": [
        191,
        388
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x66"
    },
    "66": {
      "fn": "TestTuples.tuplesTesting",
      "jump": "i",
      "offset": [
        191,
        388
      ],
      "op": "JUMP",
      "path": "0"
    },
    "67": {
      "fn": "TestTuples.tuplesTesting",
      "offset": [
        191,
        388
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "68": {
      "fn": "TestTuples.tuplesTesting",
      "offset": [
        191,
        388
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "70": {
      "fn": "TestTuples.tuplesTesting",
      "offset": [
        191,
        388
      ],
      "op": "DUP1",
      "path": "0"
    },
    "71": {
      "fn": "TestTuples.tuplesTesting",
      "offset": [
        191,
        388
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "72": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "74": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "76": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "78": {
      "op": "SHL"
    },
    "79": {
      "op": "SUB"
    },
    "80": {
      "op": "SWAP1"
    },
    "81": {
      "op": "SWAP4"
    },
    "82": {
      "op": "AND"
    },
    "83": {
      "op": "DUP4"
    },
    "84": {
      "op": "MSTORE"
    },
    "85": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "87": {
      "op": "DUP4"
    },
    "88": {
      "op": "ADD"
    },
    "89": {
      "op": "SWAP2"
    },
    "90": {
      "op": "SWAP1"
    },
    "91": {
      "op": "SWAP2"
    },
    "92": {
      "op": "MSTORE"
    },
    "93": {
      "op": "ADD"
    },
    "94": {
      "fn": "TestTuples.tuplesTesting",
      "offset": [
        191,
        388
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "96": {
      "fn": "TestTuples.tuplesTesting",
      "offset": [
        191,
        388
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "97": {
      "fn": "TestTuples.tuplesTesting",
      "offset": [
        191,
        388
      ],
      "op": "DUP1",
      "path": "0"
    },
    "98": {
      "fn": "TestTuples.tuplesTesting",
      "offset": [
        191,
        388
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "99": {
      "fn": "TestTuples.tuplesTesting",
      "offset": [
        191,
        388
      ],
      "op": "SUB",
      "path": "0"
    },
    "100": {
      "fn": "TestTuples.tuplesTesting",
      "offset": [
        191,
        388
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "101": {
      "fn": "TestTuples.tuplesTesting",
      "offset": [
        191,
        388
      ],
      "op": "RETURN",
      "path": "0"
    },
    "102": {
      "fn": "TestTuples.tuplesTesting",
      "offset": [
        191,
        388
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "103": {
      "fn": "TestTuples.tuplesTesting",
      "offset": [
        275,
        287
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "105": {
      "fn": "TestTuples.tuplesTesting",
      "offset": [
        289,
        302
      ],
      "op": "DUP1",
      "path": "0"
    },
    "106": {
      "fn": "TestTuples.tuplesTesting",
      "offset": [
        338,
        346
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 0
    },
    "107": {
      "fn": "TestTuples.tuplesTesting",
      "offset": [
        338,
        351
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "109": {
      "fn": "TestTuples.tuplesTesting",
      "offset": [
        338,
        351
      ],
      "op": "ADD",
      "path": "0"
    },
    "110": {
      "fn": "TestTuples.tuplesTesting",
      "offset": [
        338,
        351
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "111": {
      "fn": "TestTuples.tuplesTesting",
      "offset": [
        322,
        330
      ],
      "op": "DUP4",
      "path": "0"
    },
    "112": {
      "fn": "TestTuples.tuplesTesting",
      "offset": [
        322,
        335
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "114": {
      "fn": "TestTuples.tuplesTesting",
      "offset": [
        322,
        335
      ],
      "op": "ADD",
      "path": "0"
    },
    "115": {
      "fn": "TestTuples.tuplesTesting",
      "offset": [
        322,
        335
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "116": {
      "fn": "TestTuples.tuplesTesting",
      "offset": [
        322,
        351
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7D"
    },
    "119": {
      "fn": "TestTuples.tuplesTesting",
      "offset": [
        322,
        351
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "120": {
      "fn": "TestTuples.tuplesTesting",
      "offset": [
        322,
        351
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "121": {
      "fn": "TestTuples.tuplesTesting",
      "offset": [
        322,
        351
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x101"
    },
    "124": {
      "fn": "TestTuples.tuplesTesting",
      "jump": "i",
      "offset": [
        322,
        351
      ],
      "op": "JUMP",
      "path": "0"
    },
    "125": {
      "fn": "TestTuples.tuplesTesting",
      "offset": [
        322,
        351
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "126": {
      "fn": "TestTuples.tuplesTesting",
      "offset": [
        368,
        381
      ],
      "op": "SWAP3",
      "path": "0",
      "statement": 1
    },
    "127": {
      "fn": "TestTuples.tuplesTesting",
      "offset": [
        368,
        381
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "128": {
      "fn": "TestTuples.tuplesTesting",
      "offset": [
        368,
        381
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "129": {
      "fn": "TestTuples.tuplesTesting",
      "offset": [
        191,
        388
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "130": {
      "op": "POP"
    },
    "131": {
      "op": "POP"
    },
    "132": {
      "fn": "TestTuples.tuplesTesting",
      "jump": "o",
      "offset": [
        191,
        388
      ],
      "op": "JUMP",
      "path": "0"
    },
    "133": {
      "op": "JUMPDEST"
    },
    "134": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "136": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "138": {
      "op": "DUP3"
    },
    "139": {
      "op": "DUP5"
    },
    "140": {
      "op": "SUB"
    },
    "141": {
      "op": "SLT"
    },
    "142": {
      "op": "ISZERO"
    },
    "143": {
      "op": "PUSH2",
      "value": "0x97"
    },
    "146": {
      "op": "JUMPI"
    },
    "147": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "149": {
      "op": "DUP1"
    },
    "150": {
      "op": "REVERT"
    },
    "151": {
      "op": "JUMPDEST"
    },
    "152": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "154": {
      "op": "MLOAD"
    },
    "155": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "157": {
      "op": "DUP2"
    },
    "158": {
      "op": "ADD"
    },
    "159": {
      "op": "DUP2"
    },
    "160": {
      "op": "DUP2"
    },
    "161": {
      "op": "LT"
    },
    "162": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "171": {
      "op": "DUP3"
    },
    "172": {
      "op": "GT"
    },
    "173": {
      "op": "OR"
    },
    "174": {
      "op": "ISZERO"
    },
    "175": {
      "op": "PUSH2",
      "value": "0xC8"
    },
    "178": {
      "op": "JUMPI"
    },
    "179": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "184": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "186": {
      "op": "SHL"
    },
    "187": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "189": {
      "op": "MSTORE"
    },
    "190": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "192": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "194": {
      "op": "MSTORE"
    },
    "195": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "197": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "199": {
      "op": "REVERT"
    },
    "200": {
      "op": "JUMPDEST"
    },
    "201": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "203": {
      "op": "MSTORE"
    },
    "204": {
      "op": "DUP3"
    },
    "205": {
      "op": "CALLDATALOAD"
    },
    "206": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "208": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "210": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "212": {
      "op": "SHL"
    },
    "213": {
      "op": "SUB"
    },
    "214": {
      "op": "DUP2"
    },
    "215": {
      "op": "AND"
    },
    "216": {
      "op": "DUP2"
    },
    "217": {
      "op": "EQ"
    },
    "218": {
      "op": "PUSH2",
      "value": "0xE2"
    },
    "221": {
      "op": "JUMPI"
    },
    "222": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "224": {
      "op": "DUP1"
    },
    "225": {
      "op": "REVERT"
    },
    "226": {
      "op": "JUMPDEST"
    },
    "227": {
      "op": "DUP2"
    },
    "228": {
      "op": "MSTORE"
    },
    "229": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "231": {
      "op": "DUP4"
    },
    "232": {
      "op": "DUP2"
    },
    "233": {
      "op": "ADD"
    },
    "234": {
      "op": "CALLDATALOAD"
    },
    "235": {
      "op": "SWAP1"
    },
    "236": {
      "op": "DUP3"
    },
    "237": {
      "op": "ADD"
    },
    "238": {
      "op": "MSTORE"
    },
    "239": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "241": {
      "op": "SWAP3"
    },
    "242": {
      "op": "DUP4"
    },
    "243": {
      "op": "ADD"
    },
    "244": {
      "op": "CALLDATALOAD"
    },
    "245": {
      "op": "SWAP3"
    },
    "246": {
      "op": "DUP2"
    },
    "247": {
      "op": "ADD"
    },
    "248": {
      "op": "SWAP3"
    },
    "249": {
      "op": "SWAP1"
    },
    "250": {
      "op": "SWAP3"
    },
    "251": {
      "op": "MSTORE"
    },
    "252": {
      "op": "POP"
    },
    "253": {
      "op": "SWAP2"
    },
    "254": {
      "op": "SWAP1"
    },
    "255": {
      "op": "POP"
    },
    "256": {
      "jump": "o",
      "op": "JUMP"
    },
    "257": {
      "op": "JUMPDEST"
    },
    "258": {
      "op": "DUP1"
    },
    "259": {
      "op": "DUP3"
    },
    "260": {
      "op": "ADD"
    },
    "261": {
      "op": "DUP1"
    },
    "262": {
      "op": "DUP3"
    },
    "263": {
      "op": "GT"
    },
    "264": {
      "op": "ISZERO"
    },
    "265": {
      "op": "PUSH2",
      "value": "0x122"
    },
    "268": {
      "op": "JUMPI"
    },
    "269": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "274": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "276": {
      "op": "SHL"
    },
    "277": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "279": {
      "op": "MSTORE"
    },
    "280": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "282": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "284": {
      "op": "MSTORE"
    },
    "285": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "287": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "289": {
      "op": "REVERT"
    },
    "290": {
      "op": "JUMPDEST"
    },
    "291": {
      "op": "SWAP3"
    },
    "292": {
      "op": "SWAP2"
    },
    "293": {
      "op": "POP"
    },
    "294": {
      "op": "POP"
    },
    "295": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "b86eaec4d0726a3b6619866b4c7323498dfe1abe",
  "source": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity ^0.8.14;\n\ncontract TestTuples {\n    struct Position {\n        address pool;\n        uint256 numX;\n        uint256 numY;\n    }\n    function tuplesTesting(\n        Position memory position\n    ) public pure returns (address pool, uint256 count) {\n        count = position.numX + position.numY;\n        pool = position.pool;\n    }\n}\n",
  "sourceMap": "71:319:0:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/TestTuples.sol",
  "type": "contract"
}